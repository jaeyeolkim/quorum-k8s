
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "goquorum-node.fullname" . }}
  labels:
{{- if and (eq .Values.cluster.provider "azure") (.Values.cluster.cloudNativeServices) }}
    azure.workload.identity/use: "true"
{{- end }}  
    app.kubernetes.io/name: goquorum-statefulset
    app.kubernetes.io/component: goquorum
    app.kubernetes.io/part-of: {{ include "goquorum-node.fullname" . }}
    app.kubernetes.io/namespace: {{ .Release.Namespace }}
    app.kubernetes.io/release: {{ .Release.Name }}
    app.kubernetes.io/managed-by: helm
    {{- range $labelName, $labelValue := .Values.node.goquorum.customLabels }}
    {{ $labelName }}: {{ $labelValue }}
    {{- end }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: goquorum-statefulset
      app.kubernetes.io/component: goquorum
      app.kubernetes.io/part-of: {{ include "goquorum-node.fullname" . }}
      app.kubernetes.io/namespace: {{ .Release.Namespace }}
      app.kubernetes.io/release: {{ .Release.Name }}
      app.kubernetes.io/managed-by: helm
  serviceName: {{ include "goquorum-node.fullname" . }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ include "goquorum-node.fullname" . }}-storage
      resources:
        requests:
          storage: "{{ .Values.storage.pvcSizeLimit }}"
  template:
    metadata:
      labels:
{{- if and (eq .Values.cluster.provider "azure") (.Values.cluster.cloudNativeServices) }}
        azure.workload.identity/use: "true"
{{- end }}
        app.kubernetes.io/name: goquorum-statefulset
        app.kubernetes.io/component: goquorum
        app.kubernetes.io/part-of: {{ include "goquorum-node.fullname" . }}
        app.kubernetes.io/namespace: {{ .Release.Namespace }}
        app.kubernetes.io/release: {{ .Release.Name }}
        app.kubernetes.io/managed-by: helm
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ .Values.node.goquorum.metrics.pprofport | quote}}
        prometheus.io/path: "/debug/metrics/prometheus"        
    spec:
{{- if and (eq .Values.cluster.provider "azure") (.Values.cluster.cloudNativeServices) }}
      serviceAccountName: {{ .Values.azure.serviceAccountName }}
{{- else if and (eq .Values.cluster.provider "aws") (.Values.cluster.cloudNativeServices) }}
      serviceAccountName: {{ .Values.aws.serviceAccountName }}
{{- else }}
      serviceAccountName: {{ include "goquorum-node.fullname" . }}-sa
{{- end }}       
      containers:
      - name: {{ include "goquorum-node.fullname" . }}-quorum
        image: {{ .Values.image.goquorum.repository }}:{{ .Values.image.goquorum.tag }}
        imagePullPolicy: {{ .Values.image.goquorum.imagePullPolicy }}
        resources:
          requests:
            cpu: "{{ .Values.node.goquorum.resources.cpuRequest }}"
            memory: "{{ .Values.node.goquorum.resources.memRequest }}"
          limits:
            cpu: "{{ .Values.node.goquorum.resources.cpuLimit }}"
            memory: "{{ .Values.node.goquorum.resources.memLimit }}"
        env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: QUORUM_NETWORK_ID
            value: "{{ .Values.node.goquorum.networkId }}"
          - name: QUORUM_CONSENSUS
            value: istanbul
          - name: PRIVATE_CONFIG
            value: "ignore"
        volumeMounts:
          - name: keys
            mountPath: /config/keys
            readOnly: true
          - name: static-nodes-file
            mountPath: /config/static-nodes
            readOnly: true
          - name: permissions-nodes-config
            mountPath: /config/permissions-nodes/
            readOnly: true
          - name: genesis-file
            mountPath: /config/quorum/
            readOnly: true
          - name: data
            mountPath: /data
        ports:
          - name: json-rpc
            containerPort: {{ .Values.node.goquorum.rpc.port }}
            protocol: TCP
          - name: ws
            containerPort: {{ .Values.node.goquorum.ws.port }}
            protocol: TCP
          - name: graphql
            containerPort: {{ .Values.node.goquorum.graphql.port }}
            protocol: TCP
          - name: rlpx
            containerPort: {{ .Values.node.goquorum.p2p.port }}
            protocol: TCP
          - name: discovery
            containerPort: {{ .Values.node.goquorum.p2p.port }}
            protocol: UDP
          - name: metrics
            containerPort: {{ .Values.node.goquorum.metrics.pprofport }}
            protocol: TCP
        command:
          - /bin/sh
          - -c
        args:
          - |
            exec

          {{- if .Values.quorumFlags.privacy }}
            until $(curl --output /dev/null --silent --head --fail http://localhost:9000/upcheck); do echo 'waiting for transaction manager to start...'; sleep 5; done;
            echo 'transaction manager is up';
          {{- end }}

            cp /config/static-nodes/static-nodes.json /data/
            cp /config/permissions-nodes/*.json /data/
            geth --datadir=/data init /config/quorum/genesis.json
            cp /config/keys/accountKeystore /data/keystore/accountKeystore
            cp /config/keys/nodekey /data/geth/nodekey
            cp /config/keys/nodekey.pub /data/geth/nodekey.pub

            geth \
            --datadir /data \
            --nodiscover \
            --nat=any \
            --permissioned \
            --emitcheckpoints \
            --verbosity 5 \
            --istanbul.blockperiod 5 --mine --miner.threads 1 --emitcheckpoints \
            --syncmode full --nousb \
            --networkid ${QUORUM_NETWORK_ID} \
            --http --http.addr 0.0.0.0 --http.port 8545 --http.corsdomain "*" --http.vhosts "*" --http.api admin,db,eth,debug,miner,net,shh,txpool,personal,web3,quorum,istanbul \
            --ws --ws.addr 0.0.0.0 --ws.port 8546 --ws.origins "*" --ws.api admin,db,eth,debug,miner,net,shh,txpool,personal,web3,quorum,istanbul \
            --port 30303 \
            --unlock 0 \
            --allow-insecure-unlock \
            --metrics --pprof --pprof.addr 0.0.0.0 --pprof.port 9545 \
            --password /config/keys/accountPassword

        livenessProbe:
          httpGet:
            path: /
            port: 8545
            httpHeaders:
              - name: Content-Type
                value: application/json
          initialDelaySeconds: 180
          periodSeconds: 60          

      volumes:
      - name: keys
        secret:
          secretName: {{ include "goquorum-node.fullname" . }}-keys
      - name: genesis-file
        configMap:
          name: goquorum-genesis
          items:
            - key: genesis.json
              path: genesis.json
      - name: static-nodes-file
        configMap:
          name: goquorum-peers
          items:
            - key: static-nodes.json
              path: static-nodes.json
      - name: permissions-nodes-config
        configMap:
          name: goquorum-permissioned-peers
          items:
            - key: permissioned-nodes.json
              path: permissioned-nodes.json
